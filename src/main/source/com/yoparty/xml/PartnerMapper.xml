<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoparty.mapper.PartnerMapper">
    <resultMap id="BaseResultMap" type="com.yoparty.bean.Partner">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="identity_type" property="identityType" jdbcType="TINYINT"/>
        <result column="identity_num" property="identityNum" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="BIT"/>
        <result column="telephone" property="telephone" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, real_name, nick_name, identity_type, identity_num, sex, telephone
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoparty.bean.PartnerExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from partner
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from partner
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from partner
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.yoparty.bean.PartnerExample">
        delete from partner
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yoparty.bean.Partner">
        insert into partner (id, real_name, nick_name,
        identity_type, identity_num, sex,
        telephone)
        values (#{id,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
        #{identityType,jdbcType=TINYINT}, #{identityNum,jdbcType=VARCHAR}, #{sex,jdbcType=BIT},
        #{telephone,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.yoparty.bean.Partner">
        insert into partner
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="identityType != null">
                identity_type,
            </if>
            <if test="identityNum != null">
                identity_num,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                #{identityType,jdbcType=TINYINT},
            </if>
            <if test="identityNum != null">
                #{identityNum,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BIT},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yoparty.bean.PartnerExample" resultType="java.lang.Integer">
        select count(*) from partner
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update partner
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.realName != null">
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.identityType != null">
                identity_type = #{record.identityType,jdbcType=TINYINT},
            </if>
            <if test="record.identityNum != null">
                identity_num = #{record.identityNum,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=BIT},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update partner
        set id = #{record.id,jdbcType=INTEGER},
        real_name = #{record.realName,jdbcType=VARCHAR},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        identity_type = #{record.identityType,jdbcType=TINYINT},
        identity_num = #{record.identityNum,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=BIT},
        telephone = #{record.telephone,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yoparty.bean.Partner">
        update partner
        <set>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                identity_type = #{identityType,jdbcType=TINYINT},
            </if>
            <if test="identityNum != null">
                identity_num = #{identityNum,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=BIT},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yoparty.bean.Partner">
        update partner
        set real_name = #{realName,jdbcType=VARCHAR},
        nick_name = #{nickName,jdbcType=VARCHAR},
        identity_type = #{identityType,jdbcType=TINYINT},
        identity_num = #{identityNum,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=BIT},
        telephone = #{telephone,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>